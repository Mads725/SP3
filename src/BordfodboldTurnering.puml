@startuml
Abstract Tournament
class Controller
class Team
class Match
class Bracket
class Player
class Main
class Knockout
class Group


Main *-- Controller
Controller *-- Tournament
Tournament *-- Knockout
Tournament *-- Group
Knockout *-- Bracket
Group *-- Bracket
Bracket *-- Team
Bracket *-- Match
Team *-- Player

Main : + runController()

Controller : + UI()
Controller : + createTournament()
Controller : + runTournament()

Tournament : - private String tournamentWinner
Tournament : - private String tournamentName
Tournament : + createBracket()
Tournament : + cancelBracket()
Tournament : - ArrayList<Team> teams
Tournament : - ArrayList<Match> matches
Tournament : + saveTournamentData()
Tournament : + loadTournamentData()
Tournament : + Override toString()

Bracket : + randomSeeding()
Bracket : + matchHistory()
Bracket : + nextMatchReminder()
Bracket : + startMatch()


Team : - private String teamName
Team : - private String playerName
Team : + addPlayer()
Team : + removePlayer()
Team : + joinTournament()
Team : + leaveTournament()
Team : + Override toString()

Match : - private String gameTime
Match : + matchWinner()
Match : + Override toString()
Match : - teamAScore
Match : - teamBScore
Match : - matchWinner


Player : - private String name
Player : - private int age
Player : + createTeam()
Player : + leaveTeam()
Player : - private String playerMail
Player : + Override toString()




@enduml